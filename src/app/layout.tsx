import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import { Toaster } from "@/components/ui/sonner";
import "./globals.css";
import "swiper/css";
import DarkMode from "./_components/DarkMode";
import { cookies } from "next/headers";
import SideBar from "@/app/_components/SideBar/SideBar";

const geistSans = Geist({
    variable: "--font-geist-sans",
    subsets: ["latin"],
});

const geistMono = Geist_Mono({
    variable: "--font-geist-mono",
    subsets: ["latin"],
});

export const metadata: Metadata = {
    title: "Create Next App",
    description: "Generated by create next app",
};

export default async function RootLayout({
    children,
}: Readonly<{
    children: React.ReactNode;
}>) {
    const cookieStore = cookies();
    const token = (await cookieStore).get("refresh_token")?.value as string;
    const handleGetAccessToken = async (token: string) => {
        try {
            if (!token) return;
            const res = await fetch(
                "http://localhost:5000/api/auth/refresh-token",
                {
                    headers: {
                        Authorization: `Bearer ${token}`,
                    },
                    credentials: "include",
                }
            );
            const data = await res.json();
            const setCookie = res.headers.get("Set-Cookie");
            if (setCookie) {
                console.log("Found Set-Cookie:", setCookie);
            }

            return data;
        } catch (error) {
            console.log(error);
        }
    };
    await handleGetAccessToken(token);
    return (
        <html lang="en" className="dark">
            <body
                className={`${geistSans.variable} ${geistMono.variable} antialiased bg-white dark:bg-black dark:text-primary-white text-black`}
            >
                <Toaster
                    richColors
                    duration={2000}
                    position="top-right"
                    closeButton={true}
                />
                <main className="flex">
                    <SideBar></SideBar>

                    {children}
                </main>
                <DarkMode></DarkMode>
            </body>
        </html>
    );
}
